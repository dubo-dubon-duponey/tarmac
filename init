#!/bin/sh
# ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★
# P.O.SH - a very small piece of shcript to wrap brew installation
# (c) 2018 Dubo Dubon Duponey <dubodubonduponey+github@pm.me>
# Distributed under the terms of the MIT license
# ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★

# Source profile if here
# shellcheck source=/dev/null
[ -f "$HOME/.profile" ] && . "$HOME/.profile"

stamp(){
  >&2 printf "[%s] %s\\n" "$(date)" "$*"
}

error(){
  [ "$TERM" ] && [ -t 2 ] && >&2 tput setaf 1
  stamp "[ERROR]" "$@"
  [ "$TERM" ] && [ -t 2 ] && >&2 tput op
}

warning(){
  [ "$TERM" ] && [ -t 2 ] && >&2 tput setaf 3
  stamp "[WARNING]" "$@"
  [ "$TERM" ] && [ -t 2 ] && >&2 tput op
}

info(){
  [ "$TERM" ] && [ -t 2 ] && >&2 tput setaf 2
  stamp "[INFO]" "$@"
  [ "$TERM" ] && [ -t 2 ] && >&2 tput op
}

# Enforce XCode command line tools to be here
while ! command -v git 1>/dev/null; do
  git 2>/dev/null 1>&2
  warning "You need to install XCode command line tools. You should be prompted to do so now."
  info "Hit enter when XCode installation completes."
  read -r
done

info "XCode command line tools is properly installed."

if command -v brew 1>/dev/null; then
  info "Homebrew is installed on this system."
  exit
fi

# Have homebrew if not here
warning "You are missing homebrew. Going to install."

[ ! "$POSH_TOKEN" ] && printf "%s" " > Your github api token for homebrew: " && read -r POSH_TOKEN
[ ! "$POSH_TMP" ]   && printf "%s" " > Where to hold temporary files for homebrew [default to $HOME/tmp]: " && read -r POSH_TMP
[ ! "$POSH_BIN" ]   && printf "%s" " > Where to install homebrew [default to $HOME/Applications/bin]: " && read -r POSH_BIN

POSH_TMP="${POSH_TMP:-$HOME/tmp}"
POSH_BIN="${POSH_BIN:-$HOME/Applications/bin}"
POSH_CASK="${POSH_CASK:-$HOME/Applications/cask}"

mkdir -p "${POSH_BIN}/homebrew" 2>/dev/null
mkdir -p "${POSH_TMP}/cache/homebrew" 2>/dev/null
mkdir -p "${POSH_TMP}/tmp/homebrew" 2>/dev/null
mkdir -p "${POSH_TMP}/log/homebrew" 2>/dev/null
mkdir -p "${POSH_CASK}/app" 2>/dev/null
mkdir -p "${POSH_CASK}/fonts" 2>/dev/null

if  [ ! -d "${POSH_BIN}/homebrew" ] || \
    [ ! -d "${POSH_TMP}/cache/homebrew" ] || \
    [ ! -d "${POSH_TMP}/tmp/homebrew" ] || \
    [ ! -d "${POSH_TMP}/log/homebrew" ] || \
    [ ! -d "${POSH_CASK}/app" ] || \
    [ ! -d "${POSH_CASK}/fonts" ]; then
  error "Failed to create folders. Check your permissions."
  exit 1
fi

curl -s -S -L  https://github.com/Homebrew/brew/tarball/master 2>/dev/null | tar xz --strip 1 -C "${POSH_BIN}/homebrew"

if [ ! -f "${POSH_BIN}/homebrew/bin/brew" ]; then
  error "Failed to retrieve homebrew from github. Network down?"
  exit 1
fi

rm -Rf "${POSH_BIN}/homebrew/share/doc/homebrew"

cat <<-EOF > "$HOME/.posh_brew"
#!/usr/bin/env bash
# ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★
# ★ kingpin ＆ homebrew        ★
# ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★

export POSH_TMP="${POSH_TMP}"
export POSH_BIN="${POSH_BIN}"

export PATH="\${POSH_BIN}/homebrew/bin:\${POSH_BIN}/homebrew/sbin:\${PATH}"
export HOMEBREW_GITHUB_API_TOKEN=${POSH_TOKEN}
export HOMEBREW_CACHE="\${POSH_TMP}/cache/homebrew"
export HOMEBREW_TEMP="\${POSH_TMP}/tmp/homebrew"
export HOMEBREW_LOGS="\${POSH_TMP}/log/homebrew"
export HOMEBREW_CASK_OPTS="--appdir=\$HOME/Applications/cask/app --fontdir=\$HOME/Applications/cask/fonts"
# shellcheck source=/dev/null
. "\$(brew --prefix)/etc/bash_completion"
EOF

touch "$HOME/.profile"
if ! grep -q posh_brew "$HOME/.profile"; then
  cat <<-EOF >> "$HOME/.profile"
# ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★
# ★ tarmac                     ★
# ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★
# shellcheck source=$HOME/.posh_brew
. "\$HOME/.posh_brew"
EOF
fi

# shellcheck source=/dev/null
. "$HOME/.profile"

"${POSH_BIN}/homebrew/bin/brew" update
"${POSH_BIN}/homebrew/bin/brew" install bash-completion

info "Brew successfully installed. You should now source ~/.profile."

